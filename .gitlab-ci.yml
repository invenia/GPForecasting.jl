stages:
  - test
  - coverage
  - build
  - docs

.shell_ci: &shell_ci
  artifacts:
    name: "$CI_JOB_NAME coverage"
    expire_in: 1 week
    paths:
      - "$CI_JOB_NAME coverage/"
  before_script:
    - curl -s -o julia-ci https://gitlab.invenia.ca/infrastructure/gitlab-ci-helper/raw/master/julia-ci
    - chmod +x julia-ci
    - ./julia-ci install $JULIA_VERSION
  script:
    - source julia-ci export
    - export PYTHON=""  # Configure PyCall to use the Conda.jl package's Python
    - julia --compilecache=no -e "Pkg.clone(\"DiffRules\"); Pkg.clone(\"https://github.com/invenia/Nabla.jl\"); Pkg.clone(pwd());  Pkg.build(\"$PKG_NAME\"); Pkg.test(\"$PKG_NAME\"; coverage=true)"
    - ./julia-ci coverage
  after_script:
    - ./julia-ci clean

.test_06: &test_06
  variables:
    JULIA_VERSION: "0.6"
  <<: *shell_ci

.test_docker: &test_docker
  image: 292522074875.dkr.ecr.us-east-1.amazonaws.com/julia-gitlab-ci:release
  before_script:
    - yum install -y aws-cli
    - aws configure set region us-east-1
  script:
    - export PYTHON=""  # Configure PyCall to use the Conda.jl package's Python
    - julia --compilecache=no -e 'Pkg.clone("DiffRules"); Pkg.clone("https://github.com/invenia/Nabla.jl"); Pkg.clone(pwd());  Pkg.build("GPForecasting"); Pkg.test("GPForecasting"; coverage=true)'
    - julia-coverage GPForecasting
  artifacts:
    name: "$CI_JOB_NAME coverage"
    expire_in: 1 week
    paths:
      - "$CI_JOB_NAME coverage"

"0.6 (Linux, 64-bit, Docker)":
  image: 292522074875.dkr.ecr.us-east-1.amazonaws.com/julia-gitlab-ci:release
  tags:
    - docker-ci
    - linux
    - 64-bit
  <<: *test_docker

"Coverage":
  stage: coverage
  coverage: /Test Coverage (\d+\.\d+%)/
  artifacts:
    name: combined_coverage
    expire_in: 1 week
    paths:
      - combined_coverage/
  tags:
    - shell-ci
    - linux
    - 64-bit
  script:
    - genhtml --version
    - mkdir $CI_PROJECT_DIR/combined_coverage
    - cp -r $CI_PROJECT_DIR/src $CI_PROJECT_DIR/combined_coverage/
    - ls */*.info | xargs -I{} echo '--summary "{}"' | xargs lcov --directory src
    - echo "Test Coverage $(genhtml -o $CI_PROJECT_DIR/combined_coverage --no-prefix */coverage.info 2>&1 | grep lines | awk '{print $2}')"
    - find $CI_PROJECT_DIR/combined_coverage -type f -name "*.jl" -delete

"Build":
  stage: build
  tags:
    - linux
    - docker
    - ecr
    - amazon
  only:
    - master
    - develop
    - docs
    - tags  # special keyword for all tags
  script:
    - aws ecr get-login --no-include-email --region us-east-1 --registry-ids 292522074875 052722095006 | eval $SHELL
    - docker pull 292522074875.dkr.ecr.us-east-1.amazonaws.com/julia-baked:0.6
    - docker tag 292522074875.dkr.ecr.us-east-1.amazonaws.com/julia-baked:0.6 julia-baked:0.6
    - docker build --no-cache -t 052722095006.dkr.ecr.us-east-1.amazonaws.com/gpforecasting/gpforecasting:$CI_COMMIT_REF_SLUG .
    - docker push 052722095006.dkr.ecr.us-east-1.amazonaws.com/gpforecasting/gpforecasting:$CI_COMMIT_REF_SLUG

  after_script:
    - docker rmi 052722095006.dkr.ecr.us-east-1.amazonaws.com/gpforecasting/gpforecasting:$CI_COMMIT_REF_SLUG
    - docker rmi 292522074875.dkr.ecr.us-east-1.amazonaws.com/julia-baked:0.6
    - docker rmi julia-baked:0.6

"Documentation":
  stage: docs
  tags:
    - docs
  only:
    - master
    - develop
    - docs
    - tags  # special keyword for all tags
  variables:
    JULIA_VERSION: "0.6"
  before_script:
    - curl -s -o julia-ci https://gitlab.invenia.ca/infrastructure/gitlab-ci-helper/raw/master/julia-ci
    - chmod +x julia-ci
    - ./julia-ci install $JULIA_VERSION
  script:
    - source julia-ci export
    - export PYTHON=""  # Configure PyCall to use the Conda.jl package's Python
    - julia --depwarn=no -e "Pkg.clone(\"DiffRules\"); Pkg.clone(pwd()); Pkg.build(\"$PKG_NAME\"); Pkg.add(\"Documenter\"); Pkg.checkout(\"Documenter\")"
    - julia --depwarn=no -e "cd(Pkg.dir(\"$PKG_NAME\", \"docs\")); include(\"make.jl\")"
    - julia --depwarn=no -e "const DOCS_DIR = joinpath(\"/mnt\", \"docs\", \"$CI_PROJECT_NAMESPACE\", \"$CI_PROJECT_NAME\", \"$CI_BUILD_REF_NAME\"); mkpath(DOCS_DIR); cp(Pkg.dir(\"$PKG_NAME\", \"docs\", \"build\"), DOCS_DIR; remove_destination=true, follow_symlinks=true)"
  after_script:
    - ./julia-ci clean
